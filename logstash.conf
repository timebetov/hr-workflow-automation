input {
    kafka {
        bootstrap_servers => "kafka:29092"
        topics => [
            "application.submitted", "application.withdrawn", "application.status.changed",
            "interview.scheduled", "interview.rescheduled", "interview.completed", "interview.cancelled",
            "job.created", "job.updated", "job.deleted", "job.status.changed", "job.expired", "job.analytics.updated",
            "user.registered", "user.updated", "user.deleted", "user.role.changed",
            "user.logged.in", "user.logged.out", "user.failed.login"
        ]
        group_id => "logstash-business-consumer"
        auto_offset_reset => "earliest"
        codec => json { target => "business_log" }
    }
    tcp {
        port => 5044
        codec => json_lines { target => "log_data" }
    }
}

filter {
    if [business_log] {
        mutate { add_field => { "log_source" => "kafka" } }
    } else if [log_data] {
        mutate { add_field => { "log_source" => "spring-boot" } }
    }

    date {
        match => ["timestamp", "ISO8601"]
        target => "@timestamp"
    }

    if [business_log][event] in ["application.submitted", "application.withdrawn", "application.status.changed", "interview.scheduled", "interview.rescheduled", "interview.completed", "interview.cancelled"] {
        mutate { add_field => { "service" => "workflow-service" } }
    }

    if [business_log][event] in ["job.created", "job.updated", "job.deleted", "job.status.changed", "job.expired", "job.analytics.updated"] {
        mutate { add_field => { "service" => "job-service" } }
    }

    if [business_log][event] in ["user.registered", "user.updated", "user.deleted", "user.role.changed", "user.logged.in", "user.logged.out", "user.failed.login"] {
        mutate { add_field => { "service" => "identity-service" } }
    }

    if [log_data][level] == "ERROR" {
        mutate { add_field => { "log_type" => "error-log" } }
    }
    if [log_data][level] == "WARN" {
        mutate { add_field => { "log_type" => "warn-log" } }
    }
}

output {
    if [log_source] == "kafka" {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "business-events-%{+YYYY.MM.dd}"
        }
    }

    if [log_source] == "spring-boot" and [log_type] in ["error-log", "warn-log"] {
        elasticsearch {
            hosts => ["http://elasticsearch:9200"]
            index => "app-logs-%{+YYYY.MM.dd}"
        }
    }
    stdout { codec => rubydebug }
}